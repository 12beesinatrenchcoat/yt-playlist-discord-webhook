# This is a basic workflow to help you get started with Actions

name: YTPDW

# Controls when the action will run. 
on:
  schedule:
    # - cron: '0 * * * *' # hourly
      - cron: '0 */2 * * *' # Every two hours
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "YTPDW"
  YTPDW:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v3
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: Cache pip
        uses: actions/cache@v2
        with: 
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cahce for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os}}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run YTPDW
        run: |
          python main.py --offset 7200
        env:
          ApiKey: ${{ secrets.ApiKey }}
          PlaylistID: ${{ secrets.PlaylistID }}
          WebhookUrl: ${{ secrets.WebhookUrl }}
          EmbedText: VideoURL
